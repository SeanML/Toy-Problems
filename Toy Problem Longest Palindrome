function longestPalindrome (string) {
  var strArr = string.split("");
  var reversed = string.split("").reverse();
  var currResult = [];
  var temp = "";
  
  for(var i = 0; i < strArr.length; i++) {
    if(strArr[i] !== reversed[i]) {
      if(temp.length > 0) {
        currResult.push(temp);
      }
      temp = "";
    }
    
    if(strArr[i] === reversed[i]) {
      temp += strArr[i];
    }
  }
  return currResult.join("");
}


// function longestPalindrome (string) {
//   var strArr = string.split("");
//   var currResult = [];
//   var temp = "";
  
//   for(var i = 0; i < strArr.length; i++) {
//     for(var j = strArr.length - 1; j >= 0; j--) {
//       if(strArr[i] !== strArr[j]) {
//         if(temp.length > 0) {
//           currResult.push(temp);
//         }
//         temp = "";
//       }
      
//       if(strArr[i] === strArr[j]) {
//         temp += strArr[i];
//       }
//     }
//   }
//   return currResult;
// }